name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml
          requirements.txt

    - name: Restore venv
      uses: actions/cache/restore@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-py3.11-${{ hashFiles('requirements.txt') }}

    - name: Build venv if needed
      if: steps.restore-venv.outputs.cache-hit != 'true'
      env:
        PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu
      run: |
        python -m venv .venv
        . .venv/bin/activate
        pip install -r requirements.txt
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH

    - name: Install dependencies
      env:
        PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu
      run: |
        . .venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ruff
      run: |
        . .venv/bin/activate
        ruff check .

    - name: Mypy
      run: |
        . .venv/bin/activate
        mypy --strict .

    - name: Run tests
      run: |
        . .venv/bin/activate
        pytest -vv -n auto

    - name: Save venv
      uses: actions/cache/save@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-py3.11-${{ hashFiles('requirements.txt') }}
